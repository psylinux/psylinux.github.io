<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on My Hack Lab</title>
    <link>https://psylinux.github.io/categories/development/</link>
    <description>Recent content in development on My Hack Lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 14 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://psylinux.github.io/categories/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Patching binary files in Linux</title>
      <link>https://psylinux.github.io/posts/patching-binaries-in-linux/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/patching-binaries-in-linux/</guid>
      <description>Patching binary files in Linux Using xxd Binary to Hex $ xxd prog1.</description>
    </item>
    
    <item>
      <title>Debugging with strace</title>
      <link>https://psylinux.github.io/posts/debugging-with-strace/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/debugging-with-strace/</guid>
      <description>Strace debugging tool Preface Strace is a debugging tool that help us to troubleshoot issues.</description>
    </item>
    
    <item>
      <title>Installing PyEnv</title>
      <link>https://psylinux.github.io/posts/installing-pyenv/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/installing-pyenv/</guid>
      <description>PyEnv Installing Dependencies sudo apt install -y make build-essential libssl-dev \zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \wget curl llvm libncurses5-dev libncursesw5-dev \xz-utils tk-dev libffi-dev liblzma-dev python-opensslInstalling PyEnv curl -L https://github.</description>
    </item>
    
    <item>
      <title>Using the Linux Syscalls in Assembly</title>
      <link>https://psylinux.github.io/posts/linux-syscalls-in-assembly/</link>
      <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/linux-syscalls-in-assembly/</guid>
      <description>Using the Linux Syscalls in Assembly Preface In this post we&amp;rsquo;ll see how a process running in the userland can invoke syscalls to run system commands.</description>
    </item>
    
    <item>
      <title>GCC Compiling Cheat Sheet</title>
      <link>https://psylinux.github.io/posts/cheatsheet-gcc-compiling/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/cheatsheet-gcc-compiling/</guid>
      <description>GCC and Compiling Cheat Sheet Static compiling gcc -static cve_2016_0728.c -o cve_2016_0728 -lkeyutils -WallCross compiling a C code from Linux to Windows Install mingw-w64 cross-compiler: apt-get install mingw-w64To compile a Windows PE Executable 32bit: i686-w64-mingw32-gcc 271.</description>
    </item>
    
    <item>
      <title>Getting Started with GDB</title>
      <link>https://psylinux.github.io/posts/getting-start-with-gdb/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/getting-start-with-gdb/</guid>
      <description>Getting Started with GDB Preface  Before start, take a look at GCC Compiling Cheat Sheet.</description>
    </item>
    
    <item>
      <title>Installing GEF (GDB Plug-in)</title>
      <link>https://psylinux.github.io/posts/installing-gdb-gef/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/installing-gdb-gef/</guid>
      <description>GEF Installing GEF Cloning Goto GEF Project and clone the repository to /opt</description>
    </item>
    
  </channel>
</rss>