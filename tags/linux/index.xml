<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on My Hack Lab</title>
    <link>https://psylinux.github.io/tags/linux/</link>
    <description>Recent content in linux on My Hack Lab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 25 Mar 2021 17:19:34 -0300</lastBuildDate><atom:link href="https://psylinux.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cheat Sheet :: Tmux</title>
      <link>https://psylinux.github.io/posts/cheatsheet_tmux/</link>
      <pubDate>Thu, 25 Mar 2021 17:19:34 -0300</pubDate>
      
      <guid>https://psylinux.github.io/posts/cheatsheet_tmux/</guid>
      <description>Cheat Sheet :: TMUX Working with Sessions Start a New Session $ tmux new-session  Or you can type  $ tmux  Or you can use the shorthand  tmux new  If you&amp;rsquo;re already inside the tmux  : newStart a New Session with the name mysession $ tmux new -s mysession : new -s mysession Kill/Delete Sessions  Kill/Delete mysession  $ tmux kill-session -t mysession  Or you can use the shorthand  $ tmux kill-ses -t mysession  Kill/Delete all sessions but mysession  $ tmux kill-session -a -t mysession  Kill/Delete all sessions but the current session  $ tmux kill-session -a Rename session  If you&amp;rsquo;re already inside the tmux  Ctrl + b + $Detach from session  If you&amp;rsquo;re already inside the tmux  Ctrl + b + dMove Between Sessions  Move to previous session // If you&amp;rsquo;re already inside the tmux  Ctrl + b + ( Move to next session // If you&amp;rsquo;re already inside the tmux  Ctrl + b + )Attach to the last session $ tmux attach-session  Or  $ tmux attach  Or  $ tmux at  Or you can use the shorthand  $ tmux a Attach to a session using a name  Attach to a session with the name mysession  $ tmux attach-session -t mysession  Or  $ tmux attach -t mysession  Or  $ tmux at -t mysession  Or you can use the shorthand  $ tmux a -t mysession Show all sessions  Listing all sessions  $ tmux list-sessions  Or you can use the shorthand  $ tmux ls  If you&amp;rsquo;re already inside the tmux  Ctrl + b + sWorking with Windows Start a new Window  Start a new session with the name mysession and window name mywindow  $ tmux new -s mysession -n mywindow  Create a new Window // If you&amp;rsquo;re already inside the tmux  Ctrl + b + cRename a Window  Rename current window  Ctrl + b + , Close the current window  Ctrl + b + &amp;amp;Moving Between Windows  Previous window  Ctrl + b + p Next window  Ctrl + b + n Select window by number  Ctrl + b + 0.</description>
    </item>
    
    <item>
      <title>Cheat Sheet :: Linux Shell Tricks</title>
      <link>https://psylinux.github.io/posts/cheatsheet_linux_shell_tricks/</link>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/cheatsheet_linux_shell_tricks/</guid>
      <description>Cheat Sheet :: Linux Shell Tricks To find the corresponding hex code echo -n &amp;quot;&amp;amp;&amp;quot; | hexdump -C How to redirect standard error in bash nixCraft Article</description>
    </item>
    
    <item>
      <title>Patching binary files in Linux</title>
      <link>https://psylinux.github.io/posts/howto_patching_binaries_in_linux/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/howto_patching_binaries_in_linux/</guid>
      <description>Patching binary files in Linux Using xxd Binary to Hex $ xxd prog1.</description>
    </item>
    
    <item>
      <title>Article :: Debugging with strace</title>
      <link>https://psylinux.github.io/posts/article_debugging_with_strace/</link>
      <pubDate>Sun, 13 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/article_debugging_with_strace/</guid>
      <description>Strace debugging tool Preface Strace is a debugging tool that help us to troubleshoot issues.</description>
    </item>
    
    <item>
      <title>HowTo :: Install PyEnv</title>
      <link>https://psylinux.github.io/posts/howto_install_pyenv/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/howto_install_pyenv/</guid>
      <description>HowTo :: Install PyEnv Installing Dependencies sudo apt install -y make build-essential libssl-dev \ zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \ wget curl llvm libncurses5-dev libncursesw5-dev \ xz-utils tk-dev libffi-dev liblzma-dev python-openssl Installing PyEnv curl -L https://github.</description>
    </item>
    
    <item>
      <title>Article :: Using the Linux Syscalls in Assembly</title>
      <link>https://psylinux.github.io/posts/article_linux_syscalls_in_assembly/</link>
      <pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/article_linux_syscalls_in_assembly/</guid>
      <description>Using the Linux Syscalls in Assembly Preface In this post we&amp;rsquo;ll see how a process running in the userland can invoke syscalls to run system commands.</description>
    </item>
    
    <item>
      <title>Article :: Getting Started with GDB</title>
      <link>https://psylinux.github.io/posts/article_getting_start_with_gdb/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/article_getting_start_with_gdb/</guid>
      <description>Getting Started with GDB Preface  Before start, take a look at GCC Compiling Cheat Sheet.</description>
    </item>
    
    <item>
      <title>Cheat Sheet :: GCC Compiling Cheat Sheet</title>
      <link>https://psylinux.github.io/posts/cheatsheet_gcc_compiling/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/cheatsheet_gcc_compiling/</guid>
      <description>Cheat Sheet :: GCC Syntax and Compiling Options Static compiling gcc -static cve_2016_0728.</description>
    </item>
    
    <item>
      <title>HowTo :: Install GEF (GDB Plug-in)</title>
      <link>https://psylinux.github.io/posts/howto_install_gdb_gef/</link>
      <pubDate>Sun, 16 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://psylinux.github.io/posts/howto_install_gdb_gef/</guid>
      <description>HowTo :: Install GEF Cloning Goto GEF Project and clone the repository to /opt</description>
    </item>
    
  </channel>
</rss>
